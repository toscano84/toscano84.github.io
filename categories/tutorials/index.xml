<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on Hugo Toscano</title>
    <link>https://toscano84.github.io/categories/tutorials/</link>
    <description>Recent content in Tutorials on Hugo Toscano</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://toscano84.github.io/categories/tutorials/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Working with Strings in R: Seattle Pet Names</title>
      <link>https://toscano84.github.io/2019/04/working-with-strings-in-r-seattle-pet-names/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://toscano84.github.io/2019/04/working-with-strings-in-r-seattle-pet-names/</guid>
      <description>Welcome to the blog. In this new post I’ll do a short tutorial on how to work with strings in R. I’ll show you some of the main functions of the stringr package and the amazing power of the rebus package. The data frame I will be using is from the week 13 of [@TidyTuesday](https://twitter.com/hashtag/TidyTuesday?src=hash). This data frame seemed to be the perfect opportunity to build this tutorial given the importance of strings for its understanding.</description>
    </item>
    
    <item>
      <title>Euro vs Dollar: Working with Lubridate and some other packages</title>
      <link>https://toscano84.github.io/2019/04/euro-vs-dollar-working-with-lubridate-and-some-other-packages/</link>
      <pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://toscano84.github.io/2019/04/euro-vs-dollar-working-with-lubridate-and-some-other-packages/</guid>
      <description>Welcome to this new post about the Euro versus Dollar historical exchange rate since 1999 to the present day. This post will deal with dates, so I will use mainly the lubridate package and some of its most important functions. I will do my best to show you the power and simplicity of this truly magnificent tool within the R universe. Nevertheless, I won’t be restricted only to lubridate and will use some other packages to deal with this type of data.</description>
    </item>
    
    <item>
      <title>Hints to deal with Missing Values in R</title>
      <link>https://toscano84.github.io/2018/10/hints-to-deal-with-missing-values-in-r/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://toscano84.github.io/2018/10/hints-to-deal-with-missing-values-in-r/</guid>
      <description>In R missing values are usually, but not always, represented by letters NA. How to deal with missing values is very important in the data analytics world. Missing data can be sometimes tricky while analyzing a data frame, since it should be handled correctly for our statistical analysis. Before diving into more complex details about missing data, the first question that should be asked in any exploratory data analysis is: Do I have missing values in my database?</description>
    </item>
    
    <item>
      <title>Combine Data frames in R</title>
      <link>https://toscano84.github.io/2018/09/combine-data-frames-in-r/</link>
      <pubDate>Thu, 13 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://toscano84.github.io/2018/09/combine-data-frames-in-r/</guid>
      <description>Sometimes, before we start to explore our data, we need to put them together. For instance, we might have them stored in different data frames and we have to join variables from two or more data frames in one. This post will talk about the different functions we can use to achieve that goal. We will be using the dplyr package to combine different data frames.
Firstly, we will show examples related to what is called mutating joins.</description>
    </item>
    
  </channel>
</rss>